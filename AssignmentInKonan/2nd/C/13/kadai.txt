/*
12171029 KaShouen
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

#define NUM 5000


double exp_rand(double m)
{
    double r = (double)rand()/((double)RAND_MAX+1.0); // 0以上1未満の一様乱数
    double x = -m*log(1.0-r); 
    return x;
}

int main(void)
{
    int i,j,n;
    int cnt[15];
    double r;

    srand((unsigned int)time(NULL));

    for(i=0;i<15;i++) cnt[i] = 0;
    for(i=0;i<NUM;i++){
        r = exp_rand(3.0); 
        j = (int)r;
        if(j<15) cnt[j]++;
    }

    for(i=0;i<15;i++){
        n = cnt[i]/50;
        printf("*");
        for(j=0;j<n;j++){
            printf("*");
        }
        printf("\n");
    }

    return 0;
}*****************************
*********************
***************
***********
*******
******
****
***
**
**
*
*
*
*
*
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#define NUM 5000
#define PAI    3.14159265358979
double bm_rand( double m, double sig );

int main(){
    int cnt[15]={0};
    int n, tmp;
    double r;

    for(int i=0;i<NUM;i++){
        r = bm_rand(7.5, 1.5); 
        tmp = (int)r;
        if(tmp<15) cnt[tmp]++;
    }

    for(int i=0;i<15;i++){
        n = cnt[i]/50;
        printf("*");
        for(int j=0;j<n;j++){
            printf("*");
        }
        printf("\n");
    }

    return 0;
}

double bm_rand( double m, double sig )
{
    static double r1,r2;
    static int flag = 1;
    double ret;

    if( flag ){
        r1 = rand()/((double)RAND_MAX); // 0.0～1.0の一様乱数
        r2 = rand()/((double)RAND_MAX);
        ret = sig*sqrt(-2*log(r1))*cos(2*PAI*r2) + m;
    }else{
        ret = sig*sqrt(-2*log(r1))*sin(2*PAI*r2) + m;
    }
    flag = 1 - flag; // flag=1,0を交互に
    return ret;
}
*
*
***
*****
********
************
***************
****************
****************
************
********
*****
***
*
*
*
*
*
*
****
***********
**********************
**************************
**********************
***********
*****
*
*
*
*
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define PAI 3.14159265358979
int main(){
	double x,y;
	int num=0,num_in;
    double redline,buleline;
    double dPAI=2*PAI;
	while(num<1000000){
		x = (int)(dPAI*(double)rand()/((double)RAND_MAX+1.0))-PAI;

		y = (int)(dPAI*(double)rand()/((double)RAND_MAX+1.0))-PAI;
        redline = cos(x)+sin(x)/2-sin(3*x);
        buleline= x/5;
        if( abs(y - buleline) < abs(redline - buleline)){
            num_in++;
        }
		//if ( ( sqrt((x-1.0)*(x-1.0)+(y-1.0)*(y-1.0)) )  < 1.0){num_in++;}
		num++;
	}
    printf("yellow count point is:%d/1000000\n",num_in);
	printf("s:%.8f\n",(double)num_in/num);



	return 0;
}yellow count point is:112001/1000000
s:0.11200100
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define NUM 100000

int getHand( void );
int getHand2( int g, int c, int p);
int isWin( int me, int com);

int main(void)
{
    char *jk[] = {"グー","チョキ","パー"};
    int cnt[3];
    int i,h;
    int pa,pb;
    srand( (unsigned int)time(NULL) );

    for(i=0;i<3;i++) cnt[i] = 0;
    for(i=0;i<NUM;i++){
        pa = getHand2(5, 4, 1); //A の出目
        pb = getHand2(1, 1, 1); // B の出目
        int result = isWin(pa ,pb);
        if(result == 1){
            cnt[0]++; //a勝ち
        }else if(result == -1){
            cnt[1]++;//b勝ち
        }
    }
    printf("B = (1, 1, 1)\n");
    printf("A勝ち回数:%d\n",cnt[0]);
    printf("B勝ち回数:%d\n",cnt[1]);
    return 0;
}

int getHand( void )
{
    int ret;
    ret = (int)(3.0*(double)rand()/((double)RAND_MAX+1.0))+1;
    return ret;
}


int getHand2( int g, int c, int p ){
    int ret;
    double sum=g+c+p;
    ret = (int)(1.0*sum*(double)rand()/((double)RAND_MAX+1.0))+1;
    if(ret <= g){
        return 1;
    }else if(ret <= (g+c)){
        return 2;
    }else if(ret <= (g+c+p)){
        return 3;
    }

}

int isWin( int me, int com )
{
    if( me==com ) return 0; // あいこ
    if( me==1 ){ // me がグー
        if( com==2 ) return 1; else return -1;
    }else if( me==2 ){  // me がチョキ
        if( com==3 ) return 1; else return -1;
    }else{  // me がパー
        if( com==1 ) return 1; else return -1;
    }
}B = (1, 3, 3)
A勝ち回数:40020
B勝ち回数:31524
B = (4, 1, 1)
A勝ち回数:21533
B勝ち回数:36923
B = (1, 1, 1)
A勝ち回数:33561
B勝ち回数:33282
